generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model role {
  id               Int           @id @default(autoincrement())
  name             String        @db.VarChar(100)
  key              String        @db.VarChar(100) @unique
  users            user[]
  permissions      role_permission[]
  
  @@index([name])
}

model permission {
  id               Int           @id @default(autoincrement())
  name             String        @db.VarChar(100) 
  key              String        @db.VarChar(100) @unique
  permissions      role_permission[]
  
  @@index([name])
}

model role_permission {
  role_id          Int
  role             role          @relation(fields: [role_id], references: [id])
  permission_id    Int
  permission       permission    @relation(fields: [permission_id], references: [id])

  @@id([role_id, permission_id])
}

model user {
  id               Int           @id @default(autoincrement())
  name             String        @db.VarChar(200)
  email            String        @db.VarChar(100) @unique
  password         String        @db.VarChar(100)
  role_id          Int
  role             role          @relation(fields: [role_id], references: [id])
  users            incident_user[]
  interactions     incident_interaction[]
  user_token       user_token[]

  @@index([email])
}

model location {
  id               Int           @id @default(autoincrement())
  name             String        @db.VarChar(100)
  description      String        @db.VarChar(500)
  incidents        incident[]
  items            item[]
  
  @@index([name])
}

model item {
  id               Int           @id @default(autoincrement())
  name             String        @db.VarChar(100)
  description      String        @db.VarChar(500)
  location_id      Int
  location         location      @relation(fields: [location_id], references: [id])
  incidents        incident[]
  
  @@index([name])
}

model incident_type {
  id               Int           @id @default(autoincrement())
  name             String        @db.VarChar(100)
  description      String        @db.VarChar(500)
  incidents        incident[]
  
  @@index([name])
}

model incident {
  id               Int           @id @default(autoincrement())
  title            String        @db.VarChar(100)
  description      String        @db.VarChar(500)
  status           String        @db.VarChar(50)
  start_date       DateTime      @db.Timestamp(0) @default(now())
  end_date         DateTime?     @db.Timestamp(0) 
  type_id          Int
  incident_type    incident_type @relation(fields: [type_id], references: [id])
  item_id          Int
  item             item        @relation(fields: [item_id], references: [id])
  location_id      Int
  location         location      @relation(fields: [location_id], references: [id])
  users            incident_user[]
  interactions     incident_interaction[]

  @@index([title])
  @@index([status])
  @@index([start_date])
}

model incident_user {
  user_id          Int
  user             user          @relation(fields: [user_id], references: [id])
  incident_id      Int
  incident         incident      @relation(fields: [incident_id], references: [id])
  
  @@id([user_id, incident_id])
}

model incident_interaction {
  id               Int           @id @default(autoincrement())
  description      String        @db.VarChar(500)
  sent_date        DateTime      @db.Timestamp(0) @default(now())
  user_id          Int
  user             user          @relation(fields: [user_id], references: [id])
  incident_id      Int
  incident         incident      @relation(fields: [incident_id], references: [id])

  @@index([description])
  @@index([sent_date])
}

model user_token {
  id              Int      @id @default(autoincrement())
  type            String   @db.VarChar(80)
  token_number    String   @db.VarChar(200)
  create_date     DateTime @db.Timestamp(0) @default(now())
  expiration_date DateTime @db.Timestamp(0)
  user_id         Int      
  user            user     @relation(fields: [user_id], references: [id])

  @@index([token_number])
}